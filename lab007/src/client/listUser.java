/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.DefaultListModel;

/**
 *
 * @author Sotatek
 */
public class listUser extends javax.swing.JFrame {

    static boolean connected;
    static boolean logout;
    static Socket cSocket;
    static PrintWriter out;
    static BufferedReader in;
    static userInput uinput;
    static readFromServer sinput;
    static DefaultListModel list;
    public static String nick;
    static String server;
    public ChattingFr chatFr;

    public void connect() {
        logout = false;
        sinput = new readFromServer(this);
        uinput = new userInput();
        cSocket = null;
        out = null;
        in = null;
        boolean error;
        error = false;
        list = new DefaultListModel();
        listUserP.setModel(list);
        try {
            cSocket = new Socket(server, 9999);
            out = new PrintWriter(cSocket.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(cSocket.getInputStream()));
            uinput.start();
            sinput.start();
        } catch (UnknownHostException e) {
            System.out.println("Host Error" + e);

            error = true;
        } catch (IOException e) {
            System.out.println("IOException" + e);
        }
//            if (!error) {
//                nick = null;
//                nick = JOptionPane.showInputDialog(null, "NickName: ");
//                while (nick.contains(";")) {
//                    nick = JOptionPane.showInputDialog(null, "InputNickname            \";\".Cannot be null .");
//                }
//                
//            }
    }

    void loginNick(String nick) {
        this.nick = nick;
        loginAs.setText(loginAs.getText() + ": " + nick);
        send("Login: " + nick);
    }

    public void updateListUser(String newNick) {
        if (!newNick.equals(nick)) {
            list.addElement(newNick);
        }
    }
    
    public void addMessage(String from,String mess) {
        chatFr.addMessage(from, mess);
    }

    static void send(String msg) {
        out.println(msg);
    }

    static String read() {
        String s = null;
        try {
            s = in.readLine();
        } catch (Exception e) {
            System.out.println(e);
        }
        return s;
    }

    public void sendMessage(String msg) {
        if (msg != null) {
            send("PrivateMessageFrom::" + this.nick + "::" + listUserP.getSelectedValue() +"::"+ msg
            );
        }
    }

    /**
     * Creates new form listUser
     */
    public listUser() {
        initComponents();
        connect();
    }

    public listUser(String nick) {
        initComponents();
        connect();
        loginNick(nick);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginAs = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUserP = new javax.swing.JList<>();
        chatBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginAs.setText("Login as:");

        jScrollPane1.setViewportView(listUserP);

        chatBtn.setText("Chat");
        chatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(loginAs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chatBtn)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginAs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(chatBtn)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatBtnActionPerformed
        // TODO add your handling code here:
        chatFr = new ChattingFr(this);
        chatFr.setVisible(true);
    }//GEN-LAST:event_chatBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chatBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listUserP;
    private javax.swing.JLabel loginAs;
    // End of variables declaration//GEN-END:variables
}
